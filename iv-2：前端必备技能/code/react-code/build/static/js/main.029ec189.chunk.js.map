{"version":3,"sources":["components/ErrorDemo/ClassDemo.js","App.js","reportWebVitals.js","ErrorBoundary.js","index.js"],"names":["ErrorDemo","clickHandler","state","num","Error","onClick","this","React","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ErrorBoundary","props","error","errorInfo","console","info","children","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6LAuBeA,E,kDApBX,aAAe,IAAD,8BACV,gBAKJC,aAAe,aAJX,EAAKC,MAAQ,CACTC,IAAK,KAHC,E,qDASd,WACI,MAAM,IAAIC,MAAM,mB,oBAEpB,WACI,OAAO,gCACH,mDACA,wBAAQC,QAASC,KAAKL,aAAtB,0B,GAhBYM,IAAMC,WCefC,MAbf,WACE,OACE,qCACE,qCACA,uBAIA,cAAC,EAAD,QCASC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCsBCQ,E,kDA1BX,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IACDlB,MAAQ,CACTmB,MAAO,MAHI,E,qDAWnB,SAAkBA,EAAOC,GAErBC,QAAQC,KAAK,uBAAwBH,EAAOC,K,oBAEhD,WACI,OAAIhB,KAAKJ,MAAMmB,MAEJ,oDAIJf,KAAKc,MAAMK,Y,uCAhBtB,SAAgCJ,GAG5B,OADAE,QAAQC,KAAK,8BAA+BH,GACrC,CAAEA,a,GAVWd,IAAMC,WCIlCkB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,UACE,cAAC,EAAD,QAGJC,SAASC,eAAe,SAM1BpB,M","file":"static/js/main.029ec189.chunk.js","sourcesContent":["import React from 'react'\n\nclass ErrorDemo extends React.Component {\n    constructor() {\n        super()\n        this.state = {\n            num: 100\n        }\n    }\n    clickHandler = () => {\n        // this.state.num() // ErrorBoundary 无法监听事件报错，需要自行 try-catch\n    }\n    componentDidMount() {\n        throw new Error('mounted error') // ErrorBoundary 可监听渲染过程的报错\n    }\n    render() {\n        return <div>\n            <p>error demo - class</p>\n            <button onClick={this.clickHandler}>error</button>\n        </div>\n    }\n}\n\nexport default ErrorDemo\n","// import SimpleTodos from \"./components/SimpleTodos\"\n// import ErrorDemoFunctional from \"./components/ErrorDemo/FunctionalDemo\"\nimport ErrorDemoClass from \"./components/ErrorDemo/ClassDemo\"\n\nfunction App() {\n  return (\n    <>\n      <h1>App</h1>\n      <hr/>\n\n      {/* <SimpleTodos></SimpleTodos> */}\n      {/* <ErrorDemoFunctional></ErrorDemoFunctional> */}\n      <ErrorDemoClass></ErrorDemoClass>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react'\n\nclass ErrorBoundary extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            error: null // 存储当前的报错信息\n        }\n    }\n    static getDerivedStateFromError(error) {\n        // 更新 state 使下一次渲染能够显示降级后的 UI\n        console.info('getDerivedStateFromError...', error)\n        return { error }\n    }\n    componentDidCatch(error, errorInfo) {\n        // 统计上报错误信息\n        console.info('componentDidCatch...', error, errorInfo)\n    }\n    render() {\n        if (this.state.error) {\n            // 提示错误\n            return <h1>报错了</h1>\n        }\n\n        // 没有错误，就渲染子组件\n        return this.props.children\n    }\n}\n\nexport default ErrorBoundary","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport ErrorBoundary from './ErrorBoundary'\n\nReactDOM.render(\n  <React.StrictMode>\n    <ErrorBoundary>\n      <App />\n    </ErrorBoundary>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}